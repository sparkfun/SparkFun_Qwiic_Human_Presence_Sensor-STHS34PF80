{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Home","text":"<p>This is just a placeholder file for the webpage re-direct. All the content for this section is actually in the <code>getting_started.md</code> file.</p>"},{"location":"example_basic/","title":"Basic Example","text":""},{"location":"example_basic/#description","title":"Description","text":"<p>Once the Arduino library has been installed, the <code>Example1_BasicReadings.ino</code> example file can be accessed from the File &gt; Examples &gt; SparkFun STHS34PF80 Arduino Library &gt; Example1_BasicReadings drop-down menu. This example reads the human presence detection values from the STHS34PF80 sensor through the I<sup>2</sup>C interface and displays them in the Serial Monitor.</p> <code>Example1_BasicReadings.ino</code> Code Verification <p>This code was last verified to be functional under the following parameters:</p> <pre><code>IDE: Arduino 2.2.1\nHardware Platform: SparkFun RedBoard Qwiic  \nSparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\nSparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n</code></pre> <pre><code>/******************************************************************************\n  Example1_BasicReadings.ino\n\n  Read human presence detection values from the STHS34PF80 sensor, print them\n  to terminal. Prints raw IR presence (cm^-1), if motion was detected, and \n  temperature in degrees C.\n\n  SparkFun STHS34PF80 Arduino Library\n  Madison Chodikov @ SparkFun Electronics\n  Original Creation Date: September 19th, 2023\n  https://github.com/sparkfun/SparkFun_STHS34PF80_Arduino_Library\n\n  Development environment specifics:\n\n  IDE: Arduino 2.2.1\n  Hardware Platform: SparkFun RedBoard Qwiic    \n  SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\n  SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n\n  Do you like this library? Help support SparkFun. Buy a board!\n\n    SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic)\n    https://www.sparkfun.com/products/22494\n\n    SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80\n    https://www.sparkfun.com/products/23253\n\n  Hardware Connections:\n  Use a Qwiic cable to connect from the RedBoard Qwiic to the STHS34PF80 breakout (QWIIC).\n  You can also choose to wire up the connections using the header pins like so:\n\n  ARDUINO --&gt; STHS34PF80\n  SDA (A4) --&gt; SDA\n  SCL (A5) --&gt; SCL\n  3.3V --&gt; 3.3V\n  GND --&gt; GND\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n******************************************************************************/\n\n#include \"SparkFun_STHS34PF80_Arduino_Library.h\"\n#include &lt;Wire.h&gt;\n\nSTHS34PF80_I2C mySensor;\n\n// Values to fill with presence and motion data\nint16_t presenceVal = 0;\nint16_t motionVal = 0;\nfloat temperatureVal = 0;\n\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println(\"STHS34PF80 Example 1: Basic Readings\");\n\n    // Begin I2C\n    if(Wire.begin() == 0)\n    {\n      Serial.println(\"I2C Error - check I2C Address\");\n      while(1);\n    }\n\n    // Establish communication with device \n    if(mySensor.begin() == false)\n    {\n      Serial.println(\"Error setting up device - please check wiring.\");\n      while(1);\n    }\n\n    delay(1000);\n}\n\nvoid loop()\n{\n  sths34pf80_tmos_drdy_status_t dataReady;\n  mySensor.getDataReady(&amp;dataReady);\n\n  // Check whether sensor has new data - run through loop if data is ready\n  if(dataReady.drdy == 1)\n  {\n    sths34pf80_tmos_func_status_t status;\n    mySensor.getStatus(&amp;status);\n\n    // If presence flag is high, then print data\n    if(status.pres_flag == 1)\n    {\n      // Presence Units: cm^-1\n      mySensor.getPresenceValue(&amp;presenceVal);\n      Serial.print(\"Presence: \");\n      Serial.print(presenceVal);\n      Serial.println(\" cm^-1\");\n    }\n\n    if(status.mot_flag == 1)\n    {\n      Serial.println(\"Motion Detected!\");\n    }\n\n    if(status.tamb_shock_flag == 1)\n    {\n      mySensor.getTemperatureData(&amp;temperatureVal);\n      Serial.print(\"Temperature: \");\n      Serial.print(temperatureVal);\n      Serial.println(\" \u00b0C\");\n    }\n  }\n\n}\n</code></pre>"},{"location":"example_basic/#hardware-connections","title":"Hardware Connections","text":"<p>For this example, users simply need to connect their Qwiic Human Presence/Motion Sensor board to their microcontroller, utilizing the I<sup>2</sup>C interface. With the recommended hardware, users can easily connect their boards with the Qwiic connection system.</p> <p></p> <p></p> <p> The Qwiic Human Presence/Motion Sensor boards are connected to a RedBoard Plus, with a Qwiic cable. </p> Pin Connections <p>For users with a development board without a Qwiic connector, the table below illustrates the required pin connections. Make sure that the logic-level of the sensor is compatible with the development board that is being connected.</p> <p> Sensor Pin Microcontroller Pin RedBoard/Uno <code>SCL</code> I<sup>2</sup>C - Serial Clock <code>SCL</code>/<code>A5</code> <code>SDA</code> I<sup>2</sup>C - Serial Data <code>SDA</code>/<code>A4</code> <code>3V3</code> Power: 1.7 to 3.6V <code>3.3V</code> <code>GND</code> Ground <code>GND</code> <p></p>"},{"location":"example_basic/#serial-monitor","title":"Serial Monitor","text":"<p>This example reads the human presence detection values from the STHS34PF80 sensor and displays them in the Serial Monitor. It prints the raw IR presence (cm<sup>-1</sup>), if the motion detection flag was triggered, and temperature (\u00b0C).</p> <p></p> <p>The human presence detection values being streamed from the STHS34PF80 sensor into the Serial Monitor.</p> <p>Tip</p> <p>For this example wave different objects in front of the sensor, with varying ranges. Objects that emit black body radiation work the best and should trigger the motion detected flag.</p>"},{"location":"example_interrupt/","title":"Interrupt Example","text":""},{"location":"example_interrupt/#description","title":"Description","text":"<p>The <code>Example2_Interrupts.ino</code> example file can be accessed from the File &gt; Examples &gt; SparkFun STHS34PF80 Arduino Library &gt; Example2_Interrupts drop-down menu. This example builds upon the previous code in <code>Example1_BasicReadings.ino</code>. Instead of constantly streaming the human presence detection values from the STHS34PF80 sensor, the microcontroller waits until an interrupt is triggered before data is retrieved through the I<sup>2</sup>C interface.</p> <code>Example2_Interrupts.ino</code> Code Verification <p>This code was last verified to be functional under the following parameters:</p> <pre><code>IDE: Arduino 2.2.1\nHardware Platform: SparkFun RedBoard Qwiic  \nSparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\nSparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n</code></pre> <pre><code>/******************************************************************************\n  Example2_Interrupts.ino\n\n  Read human presence detection value from the STHS34PF80 sensor, print them\n  to terminal using the interrupt flag instead of the typical data ready flag. \n  Prints raw IR presence values (cm^-1).\n\n  SparkFun STHS34PF80 Arduino Library\n  Madison Chodikov @ SparkFun Electronics\n  Original Creation Date: September 19th, 2023\n  https://github.com/sparkfun/SparkFun_STHS34PF80_Arduino_Library\n\n  Development environment specifics:\n\n  IDE: Arduino 2.2.1\n  Hardware Platform: SparkFun RedBoard Qwiic    \n  SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\n  SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n\n  Do you like this library? Help support SparkFun. Buy a board!\n\n    SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic)\n    https://www.sparkfun.com/products/22494\n\n    SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80\n    https://www.sparkfun.com/products/23253\n\n  Hardware Connections:\n  Use a Qwiic cable to connect from the RedBoard Qwiic to the STHS34PF80 breakout (QWIIC).\n  You can also choose to wire up the connections using the header pins like so:\n\n  ARDUINO --&gt; STHS34PF80\n  SDA (A4) --&gt; SDA\n  SCL (A5) --&gt; SCL\n  INT (2) --&gt; INT\n  3.3V --&gt; 3.3V\n  GND --&gt; GND\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n******************************************************************************/\n\n#include \"SparkFun_STHS34PF80_Arduino_Library.h\"\n#include &lt;Wire.h&gt;\n\nSTHS34PF80_I2C mySensor;\n\n// Values to fill with presence data\nint16_t presenceVal = 0;\n\n// Change the pin number to the pin that has been chosen for your setup\nint intPin = 2;\n\n// Star the flag as false\nbool volatile interruptFlag = false;\n\n// ISR to set the triggered interrupt\nvoid isr1()\n{\n  interruptFlag = true;\n}\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println(\"STHS34PF80 Example 2: Interrupts\");\n\n    // Begin I2C\n    if(Wire.begin() == 0)\n    {\n      Serial.println(\"I2C Error - check I2C Address\");\n      while(1);\n    }\n\n    // Establish communication with device \n    if(mySensor.begin() == false)\n    {\n      Serial.println(\"Error setting up device - please check wiring.\");\n      while(1);\n    }\n\n    // Set INT pin to be triggered on rising and falling edges of INT pin\n    pinMode(intPin, INPUT);\n    // Attach interrupt to the pin as a digital pin that triggers on a change\n    attachInterrupt(digitalPinToInterrupt(intPin), isr1, CHANGE);\n\n    // Route all interrupts from device to interrupt pin\n    mySensor.setTmosRouteInterrupt(STHS34PF80_TMOS_INT_OR);\n\n    // Enable the presence interrupt source \n    // (see page 17 of application note AN5867 for more information)\n    mySensor.setTmosInterruptOR(STHS34PF80_TMOS_INT_PRESENCE);\n\n    // Set interrupt value to pulsed on the INT pin\n    mySensor.setInterruptPulsed(0);\n\n    delay(500);\n}\n\nvoid loop() \n{\n  // If interrupt is triggered\n  if(interruptFlag == true)\n  {\n    interruptFlag = false;\n\n    sths34pf80_tmos_func_status_t status;\n    mySensor.getStatus(&amp;status);\n\n    Serial.println(\"Data ready!\");\n\n\n    // If the flag is high, then read out the information\n    if(status.pres_flag == 1)\n    {\n      // Presence Units: cm^-1\n      mySensor.getPresenceValue(&amp;presenceVal);\n      Serial.print(\"Presence: \");\n      Serial.print(presenceVal);\n      Serial.println(\"cm^-1\");\n    }\n  }\n}\n</code></pre>"},{"location":"example_interrupt/#hardware-connections","title":"Hardware Connections","text":"<p>For this example, users simply need to connect their Qwiic Human Presence/Motion Sensor board to their microcontroller, utilizing the I<sup>2</sup>C interface and interrupt pin. Users can easily connect the I<sup>2</sup>C interface with the Qwiic connection system on their boards. To connect the interrupt pin, we recommend utilizing an IC-hook for a temporary connection.</p> <p></p> <p></p> <p> The Qwiic Human Presence/Motion Sensor boards are connected to a RedBoard Plus, with a Qwiic cable and an IC-hook. </p> Pin Connections <p>For users with a development board without a Qwiic connector, the table below illustrates the required pin connections. Make sure that the logic-level of the sensor is compatible with the development board that is being connected.</p> <p> Sensor Pin Microcontroller Pin RedBoard/Uno <code>INT</code> Interrupt Pin <code>D2</code> <code>SCL</code> I<sup>2</sup>C - Serial Clock <code>SCL</code>/<code>A5</code> <code>SDA</code> I<sup>2</sup>C - Serial Data <code>SDA</code>/<code>A4</code> <code>3V3</code> Power: 1.7 to 3.6V <code>3.3V</code> <code>GND</code> Ground <code>GND</code> <p></p>"},{"location":"example_interrupt/#serial-monitor","title":"Serial Monitor","text":"<p>This example waits until an interrupt is triggered by one of the detection modes before the raw IR presence value (cm<sup>-1</sup>) is retrieved from the STHS34PF80 sensor. The data is then displayed in the Serial Monitor.</p> <p></p> <p>The human presence detection values being streamed from the STHS34PF80 sensor into the Serial Monitor.</p> <p>Tip</p> <p>For this example wave different objects in front of the sensor, with varying ranges in and out of the sensor's field of view. Objects that emit black body radiation work the best and should trigger the interrupt.</p>"},{"location":"example_spi/","title":"SPI Example","text":"<p>Bug</p> <p>This example doesn't currently operate properly; we are actively looking into the issue. To track our progress, please refer to this GitHub issue.</p>"},{"location":"example_spi/#description","title":"Description","text":"<p>The <code>Example4_SPIFunctionality.ino</code> example file can be accessed from the File &gt; Examples &gt; SparkFun STHS34PF80 Arduino Library &gt; Example4_SPIFunctionality drop-down menu. This example operates similarly to the code in <code>Example1_BasicReadings.ino</code>. Instead of retrieving data through the I<sup>2</sup>C interface, the serial peripheral interface (SPI) is used to access the human presence detection values from the STHS34PF80 sensor.</p> <code>Example4_SPIFunctionality.ino</code> Code Verification <p>This code was last verified to be functional under the following parameters:</p> <pre><code>IDE: Arduino 2.2.1\nHardware Platform: SparkFun RedBoard Qwiic  \nSparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\nSparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n</code></pre> <pre><code>/******************************************************************************\n  Example4_SPIFunctionality.ino\n\n  Read human presence detection values from the STHS34PF80 sensor, print them\n  to terminal using SPI communication instead of I2C. \n  Prints raw IR presence (cm^-1), if motion was detected, and temperature \n  in degrees C.\n\n  SparkFun STHS34PF80 Arduino Library\n  Madison Chodikov @ SparkFun Electronics\n  Original Creation Date: September 19th, 2023\n  https://github.com/sparkfun/SparkFun_STHS34PF80_Arduino_Library\n\n  Development environment specifics:\n\n  IDE: Arduino 2.2.1\n  Hardware Platform: SparkFun RedBoard Qwiic    \n  SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\n  SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n\n  Do you like this library? Help support SparkFun. Buy a board!\n\n    SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic)\n    https://www.sparkfun.com/products/22494\n\n    SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80\n    https://www.sparkfun.com/products/23253\n\n  Hardware Connections:\n  Wire the SPI Connections from the RedBoard Qwiic to the STHS34PF80 Breakout \n  with a resistive divider using the header pins like so: \n\n  ARDUINO --&gt; STHS34PF80\n  SCK/SCL (13) --&gt; Clock\n  SDI/SDA (12) --&gt; Data in\n  !CS (10) --&gt; Chip Select\n  3.3V --&gt; 3.3V\n  GND --&gt; GND\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n******************************************************************************/\n\n#include \"SparkFun_STHS34PF80_Arduino_Library.h\"\n#include &lt;SPI.h&gt;\n\nSTHS34PF80_SPI mySensor; \n\n// Presence and Motion variables to fill\nint16_t presenceVal = 0;\nfloat temperatureVal = 0;\n\n// Set your chip select pin according to your setup\nuint8_t chipSelect = 10;\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println(\"STHS34PF80 Example 4: SPI Functionality\");\n\n    // Configure the chip select pin\n    pinMode(chipSelect, OUTPUT);\n      digitalWrite(chipSelect, HIGH);\n\n    // Begin SPI\n    SPI.begin();\n\n    // Establish communication with device \n    if(mySensor.begin(chipSelect) == false)\n    {\n      Serial.println(\"Error setting up device - please check wiring.\");\n      while(1);\n    }\n\n    delay(500);\n}\n\nvoid loop() \n{\n  sths34pf80_tmos_drdy_status_t dataReady;\n  mySensor.getDataReady(&amp;dataReady);\n  Serial.println(dataReady.drdy);\n\n  // Check whether sensor has new data - run through loop if data is ready\n  if(dataReady.drdy == 1)\n  {\n    sths34pf80_tmos_func_status_t status;\n    mySensor.getStatus(&amp;status);\n\n    // If presence flag is high, then print data\n    if(status.pres_flag == 1)\n    {\n      // Presence Units: cm^-1\n      mySensor.getPresenceValue(&amp;presenceVal);\n      Serial.print(\"Presence: \");\n      Serial.print(presenceVal);\n      Serial.println(\" cm^-1\");\n    }\n\n    if(status.mot_flag == 1)\n    {\n      Serial.println(\"Motion Detected!\");\n    }\n\n    if(status.tamb_shock_flag == 1)\n    {\n      mySensor.getTemperatureData(&amp;temperatureVal);\n      Serial.print(\"Temperature: \");\n      Serial.print(temperatureVal);\n      Serial.println(\" \u00b0C\");\n    }\n  }\n}\n</code></pre>"},{"location":"example_spi/#hardware-connections","title":"Hardware Connections","text":"<p>For this example, users will need to modify the <code>CS</code> jumper to enable the SPI communication. In the setups illustrated below, right-angle headers were soldered to the boards and connected with M/F jumper wires to the microcontroller. However, users should select a connection method that suits their needs.</p> <p></p> <p></p> <p> The Qwiic Human Presence/Motion Sensor boards with headers soldered to them and connected to a RedBoard Plus with jumper wires. </p>"},{"location":"example_spi/#pin-connections","title":"Pin Connections","text":"<p>Below are the pin connections for SPI communication with the sensor. Users should be aware of the logic-levels of their microcontroller; with the RedBoard Plus, users only need to flip a switch to configure all the board's pins to 3.3V-logic.</p> Sensor Pin Microcontroller Pin RedBoard Plus <code>CS</code> SPI - Chip Select Pin <code>10</code> <code>SCL</code> SPI - Serial Peripheral Clock <code>13</code> <code>SDA</code> SPI - Serial Data In/Out <code>12</code> <code>3V3</code> Power: 1.7 to 3.6V <code>3.3V</code> <code>GND</code> Ground <code>GND</code> <p></p> <p>The logic-level switch on the RedBoard Plus.</p> <p>Note</p> <p>Users will need to initially pull the <code>CS</code> pin low, to enable the SPI communication on the Qwiic Human Presence/Motion Sensor boards.</p>"},{"location":"hardware_assembly/","title":"Hardware Assembly","text":""},{"location":"hardware_assembly/#qwiic-cable","title":"Qwiic Cable","text":"<p>The simplest method to connect a microcontroller to a Qwiic Human Presence/Motion Sensor board is through the Qwiic connector.</p> <p></p> <p>Connecting a Qwiic cable to the Qwiic Human Presence/Motion Sensor board.</p> <p>Info</p> <p>The Qwiic connection system is a standardized solderless, polarized connector interface that allows users to seamlessly daisy chain I<sup>2</sup>C boards together.</p> Remove Tape <p>Users with the mini version of the Qwiic Human Presence/Motion Sensor board should remove the tape covering the Qwiic connector.</p> <p> Removing the tape from the Qwiic connector to the Qwiic Mini Human Presence/Motion Sensor board. </p> <p>Note</p> <p>The tweezers are not necessary, they were only used for illustration purposes. (Fingers would have obscured the camera shot.)</p> <p>Info</p> <p>The tape is used by the pick-and-place machine to place the connector on the board during assembly.</p>"},{"location":"hardware_assembly/#breakout-pins","title":"Breakout Pins","text":"<p>The PTH pins on the Qwiic Human Presence/Motion Sensor board are broken out into 0.1\"-spaced pins on the outer edge of the board.</p> New to soldering? <p>If you have never soldered before or need a quick refresher, check out our How to Solder: Through-Hole Soldering guide.</p> <ul> <li> <p> <p>How to Solder: Through-Hole Soldering</p>"},{"location":"hardware_assembly/#hookup-wires","title":"Hookup Wires","text":"<p>For a more permanent connection, users can solder wires directly to the board.</p> <p></p> <p>Soldering wires to the Qwiic Mini Human Presence/Motion Sensor board.</p>"},{"location":"hardware_assembly/#headers","title":"Headers","text":"<p>When selecting headers, be sure you are aware of the functionality or physical arrangement required.</p> <p></p> <p>Soldering headers to the Qwiic Human Presence/Motion Sensor board.</p>"},{"location":"hardware_overview/","title":"Hardware Overview","text":""},{"location":"hardware_overview/#board-dimensions","title":"Board Dimensions","text":"<p>The Qwiic Mini Human Presence and Motion Sensor breakout boards are laid out in the standardized 0.5\"x 1\" (1.77 x 2.54 cm) mini form-factor and the normal, 1\" x 1\" (2.54 x 2.54 cm) Qwiic breakout board. These boards also include standard 0.13\" mounting holes, which are compatible with 4-40 screws. The dimensions of these boards are illustrated in the drawings below, where the listed measurements are in inches.</p> <p></p> <p></p> <p> Dimensions (PDF) for the Qwiic Human Presence/Motion Sensor boards, in inches. </p> Need more measurements? <p>For more information about the board's dimensions, users can download the eagle files for the board. These files can be opened in Eagle and additional measurements can be made with the dimensions tool.</p>  Eagle - Free Download! <p>Eagle is a CAD program for electronics that is free to use for hobbyists and students. However, it does require an account registration to utilize the software.</p> <p> Download fromAutodesk primary logo </p>  Dimensions Tool <p>This video from Autodesk demonstrates how to utilize the dimensions tool in Eagle, to include additional measurements:</p> <p> </p>"},{"location":"hardware_overview/#power","title":"Power","text":"<p>The STHS34PF80 requires a supply voltage between 1.7V to 3.6V. This power can be provided to the board, either, through one of the polarized Qwiic connectors or the dedicated 3.3V and GND PTH pins broken out on the board.</p> <p></p> <p></p> <p> Qwiic Human Presence/Motion Sensor boards' power connections. </p> <p>Info</p> <p>The Qwiic connect system is meant to run on 3.3V. Ensure that another voltage is not being supplied, when utilized in conjunction with this system.</p> <p>Info</p> <p>For more details, users can reference the schematic and the STHS34PF80 datasheet.</p>"},{"location":"hardware_overview/#power-status-led","title":"Power Status LED","text":"<p>The red, <code>PWR</code> LED will light up once 1.4V is supplied to the board; however, for most users, it will light up when 3.3V is supplied through the Qwiic connector. A jumper is available to disconnect the power from the LED, for low-power applications (see Jumpers section below).</p> <p></p> <p></p> <p> The <code>PWR</code> status LED on the Qwiic Human Presence/Motion Sensor boards. </p> <p>Minimum Voltage</p> <p>Users should keep in mind that the forward voltage of the red LED is lower than the minimum voltage required to power the STHS34PF80 sensor. Therefore, the LED could potentially be lit, when there isn't enough voltage to power the sensor.</p>"},{"location":"hardware_overview/#sths34pf80","title":"STHS34PF80","text":"<p>The Qwiic Human Presence/Motion Sensor board features the STHS34PF80 sensor from ST Microelectronics. Composed of a matrix of floating vacuum thermal transistors MOS, the sensor measures the ambient temperature and detects the black-body radiation of objects within its 80&amp;deg field of view. The sensor's transistor array is split into two parts, one exposed to IR radiation and the other one shielded. The differential reading between the segments, allows the sensor to remove self-heating effects.</p> <p>The sensor can operate in multiple lighting conditions and is unaffected by visible light or other bands thanks to the 5 to 20\u00b5m optical band-pass filter. The STHS34PF80 also incorporates algorithms to detect and discriminate between stationary and moving objects. These features enable the sensor to work as a human presence and motion sensor in different applications such as alarm systems, anti-intruder systems, smart lighting, and room occupancy. With an output data rates between 0.25 to 30 Hz and an available single-shot measurement from the STHS34PF80, all of which can be accessed through its I<sup>2</sup>C/SPI interface.</p> <p>Features:</p> <ul> <li>I<sup>2</sup>C Address (7-bit): 0x5A (<code>1011010</code>)</li> <li>Operating Voltage: 1.7 to 3.6V<ul> <li>Current Draw: 10\u00b5A</li> </ul> </li> <li>Range: 4m (objects 70 x 25 cm\u00b2 in size)<ul> <li>Field of View: 80\u00b0</li> </ul> </li> <li>Optical wavelength: 5 to 20\u00b5m</li> <li>Built-in Detection Algorithms:<ul> <li>Identify stationary objects</li> <li>Distinguish between stationary and moving objects</li> </ul> </li> <li>Output Data Rate: 0.25 to 30Hz</li> <li>IR sensitivity: 2000 LSB/\u00b0C</li> <li>RMS noise: 25 LSB<sub>rms</sub></li> <li>Operating Temperature: -40 to 85\u00b0C (1)</li> <li>Sensor accuracy: \u00b10.6\u00b0C (local) (2)</li> <li>Factory calibrated</li> </ul> <ol> <li>The operational temperature range of the sensor is </li> <li>The accuracy specifications only apply under settled isothermal conditions.</li> </ol> <p>Current Consumption</p> <p>The average current consumption by the STHS34PF80 is 10\u00b5A with 1.5\u00b5A in power-down mode.</p> <p></p> <p>The STHS34PF80 sensor on the Qwiic Human Presence/Motion Sensor boards.</p> Operation Modes <p>The STHS34PF80 has three operation modes:</p> <ul> <li>Power-down: After the boot is completed, the device is automatically configured in power-down mode.</li> <li>One-shot: When configured in one-shot mode, the device can read environmental data at the very moment the controlling MCU requires it.</li> <li>Continuous:   When configured in continuous mode, the device keeps reading data at predefined frequencies (fixed output data rates, ODRs).</li> </ul> <p>In both one-shot mode and continuous mode, the STHS34PF80 allows performing prior averaging (filtering) of the values of ambient temperature and object temperature to obtain smoother outputs.</p> <p>Info</p> <p>For more details, users can refer to Section 3 of the AN5867 - Operation Manual.</p> Smart Detection Algorithms <p>The STHS34PF80 has three detection modes that are provided by the built-in smart algorithms:</p> <ul> <li>Presence detection</li> <li>Motion detection</li> <li>Ambient temperature shock detection</li> </ul> <p>*These are not available when wide mode is configured.</p> <p>Info</p> <p>For more details, users can refer to Section 7 of the AN5867 - Operation Manual.</p>"},{"location":"hardware_overview/#breakout-pins","title":"Breakout Pins","text":"<p>There are six PTH pins broken out on the Qwiic Human Presence/Motion Sensor boards. The pins are evenly spaced at 0.1\" on the outer edge of the board; perfect for attaching headers. These pins provide access to the I<sup>2</sup>C and SPI interfaces of the STHS34PF80 sensor, including the interrupt pin.</p> <p>Note</p> <p>The I<sup>2</sup>C interface can also be accessed through the Qwiic connectors on the board.</p>"},{"location":"hardware_overview/#i2c-pins","title":"I<sup>2</sup>C Pins","text":"<p>The I<sup>2</sup>C interface can also be accessed either through the breakout pins or the Qwiic connectors on the board. In most cases, the Qwiic connector will be the simplest method to connect the Qwiic Human Presence/Motion Sensor boards to a microcontroller. The I<sup>2</sup>C interface is enabled by default on the Qwiic Human Presence/Motion Sensor boards.</p> <p></p> <p></p> <p> I<sup>2</sup>C pins on the Qwiic Human Presence/Motion Sensor boards. </p> <p>Enabling the I<sup>2</sup>C Interface</p> <p>The I<sup>2</sup>C interface is enabled by default on the Qwiic Human Presence/Motion Sensor boards. To disable the I<sup>2</sup>C interface and enable the SPI interface, users must ensure that the <code>CS</code> pin is initially pulled down (<code>0</code>).</p>  Qwiic Connector <p>Qwiic connectors are provided for users to seamlessly integrate I<sup>2</sup>C devices with SparkFun's Qwiic Ecosystem.</p> <p> </p> <p> </p> <p> Qwiic connector and I<sup>2</sup>C pins on the Qwiic Human Presence/Motion Sensor boards. </p>"},{"location":"hardware_overview/#spi-pins","title":"SPI Pins","text":"<p>The STHS34PF80 sensor operates in a 3-wire SPI configuration. In a 3-wire mode, the data signal lines are combined into a single bidirectional data line. The data transactions are half-duplex to allow for bidirectional communication.</p> Label Pin Function <code>SCL</code> <code>SPC</code> Clock signal <code>SDA</code> <code>SDIO</code> Serial data (In/Out) <code>CS</code> <code>CS</code>  Chip select: <code>1</code>: I\u00b2C enabled <code>0</code>: SPI enabled  <p></p> <p></p> <p> SPI pins on the Qwiic Human Presence/Motion Sensor boards. Please refer to the table above for the associated pin connections, based on the boards' labels. </p> <p>Enabling the SPI Interface</p> <p>The I<sup>2</sup>C interface is enabled by default on the Qwiic Human Presence/Motion Sensor boards. To disable the I<sup>2</sup>C interface and enable the SPI interface, users must ensure that the <code>CS</code> pin is initially pulled down. (On boot-up, the <code>CS</code> must be in a <code>LOW</code> state to enable the SPI interface.)</p>"},{"location":"hardware_overview/#interrupt-pin","title":"Interrupt Pin","text":"<p>By default, the interrupt pin signals when data is available. However, the detection mode employed by the sensor can also trigger an interrupt.</p> <p></p> <p></p> <p> Interrupt pin on the Qwiic Human Presence/Motion Sensor boards. </p>"},{"location":"hardware_overview/#qwiic-connectors","title":"Qwiic Connectors","text":"<p>Qwiic connectors are provided for users to seamlessly integrate with SparkFun's Qwiic Ecosystem. Otherwise, users can access the I<sup>2</sup>C interface through the PTH pins broken out on the board.</p> <p></p> <p></p> <p> Qwiic connectors on the Qwiic Human Presence/Motion Sensor boards. </p> What is Qwiic? <p> </p> <p>The Qwiic connect system is a solderless, polarized connection system that allows users to seamlessly daisy chain I<sup>2</sup>C boards together. Play the video, to learn more about the Qwiic connect system or click on the banner above to learn more about Qwiic products.</p> <p> <p> </p> <p>Features of the Qwiic System</p> No SolderingPolarized ConnectorDaisy Chain-able <p> </p> <p>Qwiic cables (4-pin JST) plug easily from development boards to sensors, shields, accessory boards and more, making easy work of setting up a new prototype.</p> <p> </p> <p>There's no need to worry about accidentally swapping the <code>SDA</code> and <code>SCL</code> wires on your breadboard. The Qwiic connector is polarized so you know you\u2019ll have it wired correctly every time.</p> <p>The part numbers for the PCB connector is <code>SM04B-SRSS</code> (Datasheet) and the mating connector on the cables is <code>SHR04V-S-B</code>; or an equivalent 1mm pitch, 4-pin JST connection.</p> <p> </p> <p>It\u2019s time to leverage the power of the I<sup>2</sup>C bus! Most Qwiic boards will have two or more connectors on them, allowing multiple devices to be connected.</p>"},{"location":"hardware_overview/#jumpers","title":"Jumpers","text":"Never modified a jumper before? <p>Check out our Jumper Pads and PCB Traces tutorial for a quick introduction!</p> <ul> <li> <p> <p>How to Work with Jumper Pads and PCB Traces</p> <p>There are four jumpers on the back of the board that can be used to easily modify the hardware connections of the board.</p> <ul> <li>LED - This jumper can be used to disconnect power from the red, power LED for low-power applications.</li> <li>I2C - This jumper can be used to remove the pull-up resistors on the I<sup>2</sup>C bus.</li> <li>INT - This jumper can be used to remove the pull-up resistor from the <code>INT</code> pin.</li> <li>CS - This jumper can be used to remove the pull-up resistor from the <code>CS</code> pin.<ul> <li>The state of the <code>CS</code> pin on boot-up, controls whether the I<sup>2</sup>C or SPI interface is enabled. (1)</li> </ul> </li> </ul> <ol> <li> <p>Info</p> <ul> <li><code>1</code>: I\u00b2C enabled</li> <li><code>0</code>: SPI enabled</li> </ul> </li> </ol> <p></p> <p>Jumpers on the back of the Qwiic Human Presence/Motion Sensor board.</p> <p></p> <p>Jumpers on the Qwiic Mini Human Presence/Motion Sensor board.</p>"},{"location":"introduction/","title":"Introduction","text":"<p>The STHS34PF80 sensor, from ST Microelectronics, is designed to measure the precise black-body radiation (as described by Plank's law) of an object; as well as monitor ambient temperature conditions within its 80\u00b0 field of view. The sensor is composed of a matrix of floating vacuum thermal transistors MOS split into two parts, one exposed to IR radiation and the other one shielded. The differential reading between the segments, allows the sensor to remove self-heating effects. The STHS34PF80 also incorporates algorithms to detect and discriminate between stationary and moving objects. These features enable the sensor to work as a human presence and motion sensor in different applications such as alarm systems, anti-intruder systems, smart lighting, and room occupancy.</p> <ul> <li> <p> SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) SKU: SEN-22494 <p> </p> <p> \u00a0\u00a0Purchase from SparkFun  </p> <li> <p> SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 SKU: SEN-23253 <p> </p> <p> \u00a0\u00a0\u00a0Purchase from SparkFun  </p> <p>The sensor can operate in multiple lighting conditions and is unaffected by visible light or other bands thanks to the 5 to 20\u00b5m optical band-pass filter. The STHS34PF80 has an output data rates between 0.25 to 30 Hz and an available single-shot, which are accessed through its I\u00b2C/SPI interface. The SparkFun Qwiic Human Presence and Motion Sensor boards are available in both the standard 1\"x1\" Qwiic form factor and the mini breakout board. (The mini form-factor is also panel mount compatible for use in enclosures. (1))</p> <ol> <li>Please refer to the hardware implementation guidelines for the STHS34PF80 sensor.</li> </ol>"},{"location":"introduction/#required-materials","title":"Required Materials","text":"<p>To get started, users will need a few items. Now some users may already have a few of these items, feel free to modify your cart accordingly.</p> <ul> <li>Computer with an operating system (OS) that is compatible with all the software installation requirements</li> <li>A compatible microcontroller/Arduino board; we recommend the SparkFun RedBoard Plus.</li> <li>USB 3.1 Cable A to C - 3 Foot - Used to interface with the RedBoard Plus (1)</li> <li>SparkFun Qwiic Cable Kit (2)</li> <li>SparkFun Human Presence and Motion Sensor - STHS34PF80 (3)</li> </ul> <ol> <li>If your computer doesn't have a USB-A slot, then choose an appropriate cable or adapter.</li> <li>Check out our other Qwiic cable options.</li> <li>The mini version of this product is panel mount compatible.</li> </ol> <ul> <li> <p> <p>USB 3.1 Cable A to C - 3 Foot CAB-14743</p> <li> <p> <p>SparkFun RedBoard Plus DEV-18158</p> <li> <p> <p>SparkFun Qwiic Cable Kit KIT-15081</p> <li> <p> <p>SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) SEN-22494</p> <li> <p> <p>SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 SEN-23253</p> Headers and Wiring <p>To add headers or hookup wires, users will need soldering equipment and headers/wire.</p> <p>New to soldering?</p> <p>Check out our How to Solder: Through-Hole Soldering tutorial for a quick introduction!</p> <ul> <li> <p> <p>How to Solder: Through-Hole Soldering</p> <ul> <li> <p> <p>Solder Lead Free - 100-gram Spool TOL-09325</p> <li> <p> <p>Weller WLC100 Soldering Station TOL-14228</p> <li> <p> <p>Chip Quik No-Clean Flux Pen - 10mL TOL-14579</p> <li> <p> <p>Break Away Headers - Straight PRT-00116</p> <li> <p> <p>Hook-Up Wire - Assortment (Stranded, 22 AWG) PRT-11375</p> Jumper Modification <p>To modify the jumpers, users will need soldering equipment and/or a hobby knife.</p> <p>New to jumper pads?</p> <p>Check out our Jumper Pads and PCB Traces Tutorial for a quick introduction!</p> <ul> <li> <p> <p>How to Work with Jumper Pads and PCB Traces</p> <ul> <li> <p> <p>Solder Lead Free - 100-gram Spool TOL-09325</p> <li> <p> <p>Weller WLC100 Soldering Station TOL-14228</p> <li> <p> <p>Chip Quik No-Clean Flux Pen - 10mL TOL-14579</p> <li> <p> <p>Hobby Knife TOL-09200</p>"},{"location":"introduction/#suggested-reading","title":"Suggested Reading","text":"<p>As a more sophisticated product, we will skip over the more fundamental tutorials (i.e. Ohm's Law and What is Electricity?). However, below are a few tutorials that may help users familiarize themselves with various aspects of the board.</p> <ul> <li> <p> <p>Installing the Arduino IDE</p> <li> <p> <p>Installing an Arduino Library</p> <li> <p> <p>How to Install CH340 Drivers</p> <li> <p> <p>Logic Levels</p> <li> <p> <p>I2C</p> <li> <p> <p>SPI</p> <li> <p> <p>Serial Terminal Basics</p> <li> <p> <p>How to Solder: Through-Hole Soldering</p> <li> <p> <p>How to Work with Jumper Pads and PCB Traces</p>"},{"location":"print_view/","title":"Introduction","text":"<p>The STHS34PF80 sensor, from ST Microelectronics, is designed to measure the precise black-body radiation (as described by Plank's law) of an object; as well as monitor ambient temperature conditions within its 80\u00b0 field of view. The sensor is composed of a matrix of floating vacuum thermal transistors MOS split into two parts, one exposed to IR radiation and the other one shielded. The differential reading between the segments, allows the sensor to remove self-heating effects. The STHS34PF80 also incorporates algorithms to detect and discriminate between stationary and moving objects. These features enable the sensor to work as a human presence and motion sensor in different applications such as alarm systems, anti-intruder systems, smart lighting, and room occupancy.</p> <ul> <li> <p> SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) SKU: SEN-22494 <p> </p> <p> \u00a0\u00a0Purchase from SparkFun  </p> <li> <p> SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 SKU: SEN-23253 <p> </p> <p> \u00a0\u00a0\u00a0Purchase from SparkFun  </p> <p>The sensor can operate in multiple lighting conditions and is unaffected by visible light or other bands thanks to the 5 to 20\u00b5m optical band-pass filter. The STHS34PF80 has an output data rates between 0.25 to 30 Hz and an available single-shot, which are accessed through its I\u00b2C/SPI interface. The SparkFun Qwiic Human Presence and Motion Sensor boards are available in both the standard 1\"x1\" Qwiic form factor and the mini breakout board. (The mini form-factor is also panel mount compatible for use in enclosures. (1))</p> <ol> <li>Please refer to the hardware implementation guidelines for the STHS34PF80 sensor.</li> </ol>"},{"location":"print_view/#required-materials","title":"Required Materials","text":"<p>To get started, users will need a few items. Now some users may already have a few of these items, feel free to modify your cart accordingly.</p> <ul> <li>Computer with an operating system (OS) that is compatible with all the software installation requirements</li> <li>A compatible microcontroller/Arduino board; we recommend the SparkFun RedBoard Plus.</li> <li>USB 3.1 Cable A to C - 3 Foot - Used to interface with the RedBoard Plus (1)</li> <li>SparkFun Qwiic Cable Kit (2)</li> <li>SparkFun Human Presence and Motion Sensor - STHS34PF80 (3)</li> </ul> <ol> <li>If your computer doesn't have a USB-A slot, then choose an appropriate cable or adapter.</li> <li>Check out our other Qwiic cable options.</li> <li>The mini version of this product is panel mount compatible.</li> </ol> <ul> <li> <p> <p>USB 3.1 Cable A to C - 3 Foot CAB-14743</p> <li> <p> <p>SparkFun RedBoard Plus DEV-18158</p> <li> <p> <p>SparkFun Qwiic Cable Kit KIT-15081</p> <li> <p> <p>SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) SEN-22494</p> <li> <p> <p>SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 SEN-23253</p> Headers and Wiring <p>To add headers or hookup wires, users will need soldering equipment and headers/wire.</p> <p>New to soldering?</p> <p>Check out our How to Solder: Through-Hole Soldering tutorial for a quick introduction!</p> <ul> <li> <p> <p>How to Solder: Through-Hole Soldering</p> <ul> <li> <p> <p>Solder Lead Free - 100-gram Spool TOL-09325</p> <li> <p> <p>Weller WLC100 Soldering Station TOL-14228</p> <li> <p> <p>Chip Quik No-Clean Flux Pen - 10mL TOL-14579</p> <li> <p> <p>Break Away Headers - Straight PRT-00116</p> <li> <p> <p>Hook-Up Wire - Assortment (Stranded, 22 AWG) PRT-11375</p> Jumper Modification <p>To modify the jumpers, users will need soldering equipment and/or a hobby knife.</p> <p>New to jumper pads?</p> <p>Check out our Jumper Pads and PCB Traces Tutorial for a quick introduction!</p> <ul> <li> <p> <p>How to Work with Jumper Pads and PCB Traces</p> <ul> <li> <p> <p>Solder Lead Free - 100-gram Spool TOL-09325</p> <li> <p> <p>Weller WLC100 Soldering Station TOL-14228</p> <li> <p> <p>Chip Quik No-Clean Flux Pen - 10mL TOL-14579</p> <li> <p> <p>Hobby Knife TOL-09200</p>"},{"location":"print_view/#suggested-reading","title":"Suggested Reading","text":"<p>As a more sophisticated product, we will skip over the more fundamental tutorials (i.e. Ohm's Law and What is Electricity?). However, below are a few tutorials that may help users familiarize themselves with various aspects of the board.</p> <ul> <li> <p> <p>Installing the Arduino IDE</p> <li> <p> <p>Installing an Arduino Library</p> <li> <p> <p>How to Install CH340 Drivers</p> <li> <p> <p>Logic Levels</p> <li> <p> <p>I2C</p> <li> <p> <p>SPI</p> <li> <p> <p>Serial Terminal Basics</p> <li> <p> <p>How to Solder: Through-Hole Soldering</p> <li> <p> <p>How to Work with Jumper Pads and PCB Traces</p>"},{"location":"print_view/#hardware-overview","title":"Hardware Overview","text":""},{"location":"print_view/#board-dimensions","title":"Board Dimensions","text":"<p>The Qwiic Mini Human Presence and Motion Sensor breakout boards are laid out in the standardized 0.5\"x 1\" (1.77 x 2.54 cm) mini form-factor and the normal, 1\" x 1\" (2.54 x 2.54 cm) Qwiic breakout board. These boards also include standard 0.13\" mounting holes, which are compatible with 4-40 screws. The dimensions of these boards are illustrated in the drawings below, where the listed measurements are in inches.</p> <p></p> <p></p> <p> Dimensions (PDF) for the Qwiic Human Presence/Motion Sensor boards, in inches. </p> Need more measurements? <p>For more information about the board's dimensions, users can download the eagle files for the board. These files can be opened in Eagle and additional measurements can be made with the dimensions tool.</p>  Eagle - Free Download! <p>Eagle is a CAD program for electronics that is free to use for hobbyists and students. However, it does require an account registration to utilize the software.</p> <p> Download fromAutodesk primary logo </p>  Dimensions Tool <p>This video from Autodesk demonstrates how to utilize the dimensions tool in Eagle, to include additional measurements:</p> <p> </p>"},{"location":"print_view/#power","title":"Power","text":"<p>The STHS34PF80 requires a supply voltage between 1.7V to 3.6V. This power can be provided to the board, either, through one of the polarized Qwiic connectors or the dedicated 3.3V and GND PTH pins broken out on the board.</p> <p></p> <p></p> <p> Qwiic Human Presence/Motion Sensor boards' power connections. </p> <p>Info</p> <p>The Qwiic connect system is meant to run on 3.3V. Ensure that another voltage is not being supplied, when utilized in conjunction with this system.</p> <p>Info</p> <p>For more details, users can reference the schematic and the STHS34PF80 datasheet.</p>"},{"location":"print_view/#power-status-led","title":"Power Status LED","text":"<p>The red, <code>PWR</code> LED will light up once 1.4V is supplied to the board; however, for most users, it will light up when 3.3V is supplied through the Qwiic connector. A jumper is available to disconnect the power from the LED, for low-power applications (see Jumpers section below).</p> <p></p> <p></p> <p> The <code>PWR</code> status LED on the Qwiic Human Presence/Motion Sensor boards. </p> <p>Minimum Voltage</p> <p>Users should keep in mind that the forward voltage of the red LED is lower than the minimum voltage required to power the STHS34PF80 sensor. Therefore, the LED could potentially be lit, when there isn't enough voltage to power the sensor.</p>"},{"location":"print_view/#sths34pf80","title":"STHS34PF80","text":"<p>The Qwiic Human Presence/Motion Sensor board features the STHS34PF80 sensor from ST Microelectronics. Composed of a matrix of floating vacuum thermal transistors MOS, the sensor measures the ambient temperature and detects the black-body radiation of objects within its 80&amp;deg field of view. The sensor's transistor array is split into two parts, one exposed to IR radiation and the other one shielded. The differential reading between the segments, allows the sensor to remove self-heating effects.</p> <p>The sensor can operate in multiple lighting conditions and is unaffected by visible light or other bands thanks to the 5 to 20\u00b5m optical band-pass filter. The STHS34PF80 also incorporates algorithms to detect and discriminate between stationary and moving objects. These features enable the sensor to work as a human presence and motion sensor in different applications such as alarm systems, anti-intruder systems, smart lighting, and room occupancy. With an output data rates between 0.25 to 30 Hz and an available single-shot measurement from the STHS34PF80, all of which can be accessed through its I<sup>2</sup>C/SPI interface.</p> <p>Features:</p> <ul> <li>I<sup>2</sup>C Address (7-bit): 0x5A (<code>1011010</code>)</li> <li>Operating Voltage: 1.7 to 3.6V<ul> <li>Current Draw: 10\u00b5A</li> </ul> </li> <li>Range: 4m (objects 70 x 25 cm\u00b2 in size)<ul> <li>Field of View: 80\u00b0</li> </ul> </li> <li>Optical wavelength: 5 to 20\u00b5m</li> <li>Built-in Detection Algorithms:<ul> <li>Identify stationary objects</li> <li>Distinguish between stationary and moving objects</li> </ul> </li> <li>Output Data Rate: 0.25 to 30Hz</li> <li>IR sensitivity: 2000 LSB/\u00b0C</li> <li>RMS noise: 25 LSB<sub>rms</sub></li> <li>Operating Temperature: -40 to 85\u00b0C (1)</li> <li>Sensor accuracy: \u00b10.6\u00b0C (local) (2)</li> <li>Factory calibrated</li> </ul> <ol> <li>The operational temperature range of the sensor is </li> <li>The accuracy specifications only apply under settled isothermal conditions.</li> </ol> <p>Current Consumption</p> <p>The average current consumption by the STHS34PF80 is 10\u00b5A with 1.5\u00b5A in power-down mode.</p> <p></p> <p>The STHS34PF80 sensor on the Qwiic Human Presence/Motion Sensor boards.</p> Operation Modes <p>The STHS34PF80 has three operation modes:</p> <ul> <li>Power-down: After the boot is completed, the device is automatically configured in power-down mode.</li> <li>One-shot: When configured in one-shot mode, the device can read environmental data at the very moment the controlling MCU requires it.</li> <li>Continuous:   When configured in continuous mode, the device keeps reading data at predefined frequencies (fixed output data rates, ODRs).</li> </ul> <p>In both one-shot mode and continuous mode, the STHS34PF80 allows performing prior averaging (filtering) of the values of ambient temperature and object temperature to obtain smoother outputs.</p> <p>Info</p> <p>For more details, users can refer to Section 3 of the AN5867 - Operation Manual.</p> Smart Detection Algorithms <p>The STHS34PF80 has three detection modes that are provided by the built-in smart algorithms:</p> <ul> <li>Presence detection</li> <li>Motion detection</li> <li>Ambient temperature shock detection</li> </ul> <p>*These are not available when wide mode is configured.</p> <p>Info</p> <p>For more details, users can refer to Section 7 of the AN5867 - Operation Manual.</p>"},{"location":"print_view/#breakout-pins","title":"Breakout Pins","text":"<p>There are six PTH pins broken out on the Qwiic Human Presence/Motion Sensor boards. The pins are evenly spaced at 0.1\" on the outer edge of the board; perfect for attaching headers. These pins provide access to the I<sup>2</sup>C and SPI interfaces of the STHS34PF80 sensor, including the interrupt pin.</p> <p>Note</p> <p>The I<sup>2</sup>C interface can also be accessed through the Qwiic connectors on the board.</p>"},{"location":"print_view/#i2c-pins","title":"I<sup>2</sup>C Pins","text":"<p>The I<sup>2</sup>C interface can also be accessed either through the breakout pins or the Qwiic connectors on the board. In most cases, the Qwiic connector will be the simplest method to connect the Qwiic Human Presence/Motion Sensor boards to a microcontroller. The I<sup>2</sup>C interface is enabled by default on the Qwiic Human Presence/Motion Sensor boards.</p> <p></p> <p></p> <p> I<sup>2</sup>C pins on the Qwiic Human Presence/Motion Sensor boards. </p> <p>Enabling the I<sup>2</sup>C Interface</p> <p>The I<sup>2</sup>C interface is enabled by default on the Qwiic Human Presence/Motion Sensor boards. To disable the I<sup>2</sup>C interface and enable the SPI interface, users must ensure that the <code>CS</code> pin is initially pulled down (<code>0</code>).</p>  Qwiic Connector <p>Qwiic connectors are provided for users to seamlessly integrate I<sup>2</sup>C devices with SparkFun's Qwiic Ecosystem.</p> <p> </p> <p> </p> <p> Qwiic connector and I<sup>2</sup>C pins on the Qwiic Human Presence/Motion Sensor boards. </p>"},{"location":"print_view/#spi-pins","title":"SPI Pins","text":"<p>The STHS34PF80 sensor operates in a 3-wire SPI configuration. In a 3-wire mode, the data signal lines are combined into a single bidirectional data line. The data transactions are half-duplex to allow for bidirectional communication.</p> Label Pin Function <code>SCL</code> <code>SPC</code> Clock signal <code>SDA</code> <code>SDIO</code> Serial data (In/Out) <code>CS</code> <code>CS</code>  Chip select: <code>1</code>: I\u00b2C enabled <code>0</code>: SPI enabled  <p></p> <p></p> <p> SPI pins on the Qwiic Human Presence/Motion Sensor boards. Please refer to the table above for the associated pin connections, based on the boards' labels. </p> <p>Enabling the SPI Interface</p> <p>The I<sup>2</sup>C interface is enabled by default on the Qwiic Human Presence/Motion Sensor boards. To disable the I<sup>2</sup>C interface and enable the SPI interface, users must ensure that the <code>CS</code> pin is initially pulled down. (On boot-up, the <code>CS</code> must be in a <code>LOW</code> state to enable the SPI interface.)</p>"},{"location":"print_view/#interrupt-pin","title":"Interrupt Pin","text":"<p>By default, the interrupt pin signals when data is available. However, the detection mode employed by the sensor can also trigger an interrupt.</p> <p></p> <p></p> <p> Interrupt pin on the Qwiic Human Presence/Motion Sensor boards. </p>"},{"location":"print_view/#qwiic-connectors","title":"Qwiic Connectors","text":"<p>Qwiic connectors are provided for users to seamlessly integrate with SparkFun's Qwiic Ecosystem. Otherwise, users can access the I<sup>2</sup>C interface through the PTH pins broken out on the board.</p> <p></p> <p></p> <p> Qwiic connectors on the Qwiic Human Presence/Motion Sensor boards. </p> What is Qwiic? <p> </p> <p>The Qwiic connect system is a solderless, polarized connection system that allows users to seamlessly daisy chain I<sup>2</sup>C boards together. Play the video, to learn more about the Qwiic connect system or click on the banner above to learn more about Qwiic products.</p> <p> <p> </p> <p>Features of the Qwiic System</p> No SolderingPolarized ConnectorDaisy Chain-able <p> </p> <p>Qwiic cables (4-pin JST) plug easily from development boards to sensors, shields, accessory boards and more, making easy work of setting up a new prototype.</p> <p> </p> <p>There's no need to worry about accidentally swapping the <code>SDA</code> and <code>SCL</code> wires on your breadboard. The Qwiic connector is polarized so you know you\u2019ll have it wired correctly every time.</p> <p>The part numbers for the PCB connector is <code>SM04B-SRSS</code> (Datasheet) and the mating connector on the cables is <code>SHR04V-S-B</code>; or an equivalent 1mm pitch, 4-pin JST connection.</p> <p> </p> <p>It\u2019s time to leverage the power of the I<sup>2</sup>C bus! Most Qwiic boards will have two or more connectors on them, allowing multiple devices to be connected.</p>"},{"location":"print_view/#jumpers","title":"Jumpers","text":"Never modified a jumper before? <p>Check out our Jumper Pads and PCB Traces tutorial for a quick introduction!</p> <ul> <li> <p> <p>How to Work with Jumper Pads and PCB Traces</p> <p>There are four jumpers on the back of the board that can be used to easily modify the hardware connections of the board.</p> <ul> <li>LED - This jumper can be used to disconnect power from the red, power LED for low-power applications.</li> <li>I2C - This jumper can be used to remove the pull-up resistors on the I<sup>2</sup>C bus.</li> <li>INT - This jumper can be used to remove the pull-up resistor from the <code>INT</code> pin.</li> <li>CS - This jumper can be used to remove the pull-up resistor from the <code>CS</code> pin.<ul> <li>The state of the <code>CS</code> pin on boot-up, controls whether the I<sup>2</sup>C or SPI interface is enabled. (1)</li> </ul> </li> </ul> <ol> <li> <p>Info</p> <ul> <li><code>1</code>: I\u00b2C enabled</li> <li><code>0</code>: SPI enabled</li> </ul> </li> </ol> <p></p> <p>Jumpers on the back of the Qwiic Human Presence/Motion Sensor board.</p> <p></p> <p>Jumpers on the Qwiic Mini Human Presence/Motion Sensor board.</p>"},{"location":"print_view/#hardware-assembly","title":"Hardware Assembly","text":""},{"location":"print_view/#qwiic-cable","title":"Qwiic Cable","text":"<p>The simplest method to connect a microcontroller to a Qwiic Human Presence/Motion Sensor board is through the Qwiic connector.</p> <p></p> <p>Connecting a Qwiic cable to the Qwiic Human Presence/Motion Sensor board.</p> <p>Info</p> <p>The Qwiic connection system is a standardized solderless, polarized connector interface that allows users to seamlessly daisy chain I<sup>2</sup>C boards together.</p> Remove Tape <p>Users with the mini version of the Qwiic Human Presence/Motion Sensor board should remove the tape covering the Qwiic connector.</p> <p> Removing the tape from the Qwiic connector to the Qwiic Mini Human Presence/Motion Sensor board. </p> <p>Note</p> <p>The tweezers are not necessary, they were only used for illustration purposes. (Fingers would have obscured the camera shot.)</p> <p>Info</p> <p>The tape is used by the pick-and-place machine to place the connector on the board during assembly.</p>"},{"location":"print_view/#breakout-pins_1","title":"Breakout Pins","text":"<p>The PTH pins on the Qwiic Human Presence/Motion Sensor board are broken out into 0.1\"-spaced pins on the outer edge of the board.</p> New to soldering? <p>If you have never soldered before or need a quick refresher, check out our How to Solder: Through-Hole Soldering guide.</p> <ul> <li> <p> <p>How to Solder: Through-Hole Soldering</p>"},{"location":"print_view/#hookup-wires","title":"Hookup Wires","text":"<p>For a more permanent connection, users can solder wires directly to the board.</p> <p></p> <p>Soldering wires to the Qwiic Mini Human Presence/Motion Sensor board.</p>"},{"location":"print_view/#headers","title":"Headers","text":"<p>When selecting headers, be sure you are aware of the functionality or physical arrangement required.</p> <p></p> <p>Soldering headers to the Qwiic Human Presence/Motion Sensor board.</p>"},{"location":"print_view/#software-overview","title":"Software Overview","text":""},{"location":"print_view/#arduino-ide","title":"Arduino IDE","text":"<p>Tip</p> <p>For first-time users, who have never programmed before and are looking to use the Arduino IDE, we recommend beginning with the SparkFun Inventor's Kit (SIK), which is designed to help users get started programming with the Arduino IDE.</p> <p>Most users may already be familiar with the Arduino IDE and its use. However, for those of you who have never heard the name Arduino before, feel free to check out the Arduino website. To get started with using the Arduino IDE, check out our tutorials below:</p> <ul> <li> <p> <p>What is an Arduino?</p> <li> <p> <p>Installing the Arduino IDE</p> <li> <p> <p>Installing an Arduino Library</p> <li> <p> <p>Installing Board Definitions in the Arduino IDE</p> Need help setting up the RedBoard Plus?"},{"location":"print_view/#redboard-plus","title":"RedBoard Plus","text":"<p>The following instructions should help users get started with the RedBoard Plus. For more information about the board, please check out our hookup guide below:</p> <p> RedBoard Plus Hookup Guide </p>"},{"location":"print_view/#ch340-driver","title":"CH340 Driver","text":"<p>Users will need to install the appropriate driver for their computer to recognize the serial-to-UART chip on their board/adapter. Most of the latest operating systems will recognize the CH340C chip on the board and automatically install the required driver.</p> <p>To manually install the CH340 driver on their computer, users can download it from the WCH website. For more information, check out our How to Install CH340 Drivers Tutorial.</p> <p> How to Install CH340 Drivers </p>"},{"location":"print_view/#selecting-a-board","title":"Selecting a Board","text":"<p>When selecting a board to program in the Arduino IDE, users should select the Arduino Uno from the Tools drop-down menu (_i.e. Tools &gt; Board &gt; Arduino AVR Boards &gt; Arduino Uno).</p> <p> Select the Arduino Uno from the Tools drop-down menu in the Arduino IDE. </p> Arduino IDE 2.x.x - Alternative Method <p>In the newest version of the Arduino IDE 2.<code>x</code>.<code>x</code>, users can also select their board (green) and port (blue) from the <code>Select Board &amp; Port</code> dropdown menu (yellow).</p> <p> Selecting the Arduino Uno and COM5 port from the Select Board &amp; Port drop-down menu in the Arduino IDE (v2.0.3)."},{"location":"print_view/#sparkfun-sths34pf80-arduino-library","title":"SparkFun STHS34PF80 Arduino Library","text":"<p>The SparkFun STHS34PF80 Arduino library can be installed from the library manager in the Arduino IDE by searching for:</p> <pre><code>SparkFun STHS34PF80 Arduino library\n</code></pre> <p></p> <p>SparkFun STHS34PF80 Arduino library in the library manager of the Arduino IDE.</p> Manually Downloading the Arduino Library <p>For users who would like to manually download and install the library, the <code>*.zip</code> file can be accessed from the GitHub repository or downloaded by clicking the button below.</p> <p>  Download the Arduino Library </p>"},{"location":"print_view/#example-basic","title":"Example - Basic","text":"<p>Once the Arduino library has been installed, the <code>Example1_BasicReadings.ino</code> example file can be accessed from the File &gt; Examples &gt; SparkFun STHS34PF80 Arduino Library &gt; Example1_BasicReadings drop-down menu. This example reads the human presence detection values from the STHS34PF80 sensor through the I<sup>2</sup>C interface and displays them in the Serial Monitor.</p> <code>Example1_BasicReadings.ino</code> Code Verification <p>This code was last verified to be functional under the following parameters:</p> <pre><code>IDE: Arduino 2.2.1\nHardware Platform: SparkFun RedBoard Qwiic  \nSparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\nSparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n</code></pre> <pre><code>/******************************************************************************\n  Example1_BasicReadings.ino\n\n  Read human presence detection values from the STHS34PF80 sensor, print them\n  to terminal. Prints raw IR presence (cm^-1), if motion was detected, and \n  temperature in degrees C.\n\n  SparkFun STHS34PF80 Arduino Library\n  Madison Chodikov @ SparkFun Electronics\n  Original Creation Date: September 19th, 2023\n  https://github.com/sparkfun/SparkFun_STHS34PF80_Arduino_Library\n\n  Development environment specifics:\n\n  IDE: Arduino 2.2.1\n  Hardware Platform: SparkFun RedBoard Qwiic    \n  SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\n  SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n\n  Do you like this library? Help support SparkFun. Buy a board!\n\n    SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic)\n    https://www.sparkfun.com/products/22494\n\n    SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80\n    https://www.sparkfun.com/products/23253\n\n  Hardware Connections:\n  Use a Qwiic cable to connect from the RedBoard Qwiic to the STHS34PF80 breakout (QWIIC).\n  You can also choose to wire up the connections using the header pins like so:\n\n  ARDUINO --&gt; STHS34PF80\n  SDA (A4) --&gt; SDA\n  SCL (A5) --&gt; SCL\n  3.3V --&gt; 3.3V\n  GND --&gt; GND\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n******************************************************************************/\n\n#include \"SparkFun_STHS34PF80_Arduino_Library.h\"\n#include &lt;Wire.h&gt;\n\nSTHS34PF80_I2C mySensor;\n\n// Values to fill with presence and motion data\nint16_t presenceVal = 0;\nint16_t motionVal = 0;\nfloat temperatureVal = 0;\n\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println(\"STHS34PF80 Example 1: Basic Readings\");\n\n    // Begin I2C\n    if(Wire.begin() == 0)\n    {\n      Serial.println(\"I2C Error - check I2C Address\");\n      while(1);\n    }\n\n    // Establish communication with device \n    if(mySensor.begin() == false)\n    {\n      Serial.println(\"Error setting up device - please check wiring.\");\n      while(1);\n    }\n\n    delay(1000);\n}\n\nvoid loop()\n{\n  sths34pf80_tmos_drdy_status_t dataReady;\n  mySensor.getDataReady(&amp;dataReady);\n\n  // Check whether sensor has new data - run through loop if data is ready\n  if(dataReady.drdy == 1)\n  {\n    sths34pf80_tmos_func_status_t status;\n    mySensor.getStatus(&amp;status);\n\n    // If presence flag is high, then print data\n    if(status.pres_flag == 1)\n    {\n      // Presence Units: cm^-1\n      mySensor.getPresenceValue(&amp;presenceVal);\n      Serial.print(\"Presence: \");\n      Serial.print(presenceVal);\n      Serial.println(\" cm^-1\");\n    }\n\n    if(status.mot_flag == 1)\n    {\n      Serial.println(\"Motion Detected!\");\n    }\n\n    if(status.tamb_shock_flag == 1)\n    {\n      mySensor.getTemperatureData(&amp;temperatureVal);\n      Serial.print(\"Temperature: \");\n      Serial.print(temperatureVal);\n      Serial.println(\" \u00b0C\");\n    }\n  }\n\n}\n</code></pre>"},{"location":"print_view/#hardware-connections","title":"Hardware Connections","text":"<p>For this example, users simply need to connect their Qwiic Human Presence/Motion Sensor board to their microcontroller, utilizing the I<sup>2</sup>C interface. With the recommended hardware, users can easily connect their boards with the Qwiic connection system.</p> <p></p> <p></p> <p> The Qwiic Human Presence/Motion Sensor boards are connected to a RedBoard Plus, with a Qwiic cable. </p> Pin Connections <p>For users with a development board without a Qwiic connector, the table below illustrates the required pin connections. Make sure that the logic-level of the sensor is compatible with the development board that is being connected.</p> <p> Sensor Pin Microcontroller Pin RedBoard/Uno <code>SCL</code> I<sup>2</sup>C - Serial Clock <code>SCL</code>/<code>A5</code> <code>SDA</code> I<sup>2</sup>C - Serial Data <code>SDA</code>/<code>A4</code> <code>3V3</code> Power: 1.7 to 3.6V <code>3.3V</code> <code>GND</code> Ground <code>GND</code> <p></p>"},{"location":"print_view/#serial-monitor","title":"Serial Monitor","text":"<p>This example reads the human presence detection values from the STHS34PF80 sensor and displays them in the Serial Monitor. It prints the raw IR presence (cm<sup>-1</sup>), if the motion detection flag was triggered, and temperature (\u00b0C).</p> <p></p> <p>The human presence detection values being streamed from the STHS34PF80 sensor into the Serial Monitor.</p> <p>Tip</p> <p>For this example wave different objects in front of the sensor, with varying ranges. Objects that emit black body radiation work the best and should trigger the motion detected flag.</p>"},{"location":"print_view/#example-interrupt","title":"Example - Interrupt","text":"<p>The <code>Example2_Interrupts.ino</code> example file can be accessed from the File &gt; Examples &gt; SparkFun STHS34PF80 Arduino Library &gt; Example2_Interrupts drop-down menu. This example builds upon the previous code in <code>Example1_BasicReadings.ino</code>. Instead of constantly streaming the human presence detection values from the STHS34PF80 sensor, the microcontroller waits until an interrupt is triggered before data is retrieved through the I<sup>2</sup>C interface.</p> <code>Example2_Interrupts.ino</code> Code Verification <p>This code was last verified to be functional under the following parameters:</p> <pre><code>IDE: Arduino 2.2.1\nHardware Platform: SparkFun RedBoard Qwiic  \nSparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\nSparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n</code></pre> <pre><code>/******************************************************************************\n  Example2_Interrupts.ino\n\n  Read human presence detection value from the STHS34PF80 sensor, print them\n  to terminal using the interrupt flag instead of the typical data ready flag. \n  Prints raw IR presence values (cm^-1).\n\n  SparkFun STHS34PF80 Arduino Library\n  Madison Chodikov @ SparkFun Electronics\n  Original Creation Date: September 19th, 2023\n  https://github.com/sparkfun/SparkFun_STHS34PF80_Arduino_Library\n\n  Development environment specifics:\n\n  IDE: Arduino 2.2.1\n  Hardware Platform: SparkFun RedBoard Qwiic    \n  SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\n  SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n\n  Do you like this library? Help support SparkFun. Buy a board!\n\n    SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic)\n    https://www.sparkfun.com/products/22494\n\n    SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80\n    https://www.sparkfun.com/products/23253\n\n  Hardware Connections:\n  Use a Qwiic cable to connect from the RedBoard Qwiic to the STHS34PF80 breakout (QWIIC).\n  You can also choose to wire up the connections using the header pins like so:\n\n  ARDUINO --&gt; STHS34PF80\n  SDA (A4) --&gt; SDA\n  SCL (A5) --&gt; SCL\n  INT (2) --&gt; INT\n  3.3V --&gt; 3.3V\n  GND --&gt; GND\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n******************************************************************************/\n\n#include \"SparkFun_STHS34PF80_Arduino_Library.h\"\n#include &lt;Wire.h&gt;\n\nSTHS34PF80_I2C mySensor;\n\n// Values to fill with presence data\nint16_t presenceVal = 0;\n\n// Change the pin number to the pin that has been chosen for your setup\nint intPin = 2;\n\n// Star the flag as false\nbool volatile interruptFlag = false;\n\n// ISR to set the triggered interrupt\nvoid isr1()\n{\n  interruptFlag = true;\n}\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println(\"STHS34PF80 Example 2: Interrupts\");\n\n    // Begin I2C\n    if(Wire.begin() == 0)\n    {\n      Serial.println(\"I2C Error - check I2C Address\");\n      while(1);\n    }\n\n    // Establish communication with device \n    if(mySensor.begin() == false)\n    {\n      Serial.println(\"Error setting up device - please check wiring.\");\n      while(1);\n    }\n\n    // Set INT pin to be triggered on rising and falling edges of INT pin\n    pinMode(intPin, INPUT);\n    // Attach interrupt to the pin as a digital pin that triggers on a change\n    attachInterrupt(digitalPinToInterrupt(intPin), isr1, CHANGE);\n\n    // Route all interrupts from device to interrupt pin\n    mySensor.setTmosRouteInterrupt(STHS34PF80_TMOS_INT_OR);\n\n    // Enable the presence interrupt source \n    // (see page 17 of application note AN5867 for more information)\n    mySensor.setTmosInterruptOR(STHS34PF80_TMOS_INT_PRESENCE);\n\n    // Set interrupt value to pulsed on the INT pin\n    mySensor.setInterruptPulsed(0);\n\n    delay(500);\n}\n\nvoid loop() \n{\n  // If interrupt is triggered\n  if(interruptFlag == true)\n  {\n    interruptFlag = false;\n\n    sths34pf80_tmos_func_status_t status;\n    mySensor.getStatus(&amp;status);\n\n    Serial.println(\"Data ready!\");\n\n\n    // If the flag is high, then read out the information\n    if(status.pres_flag == 1)\n    {\n      // Presence Units: cm^-1\n      mySensor.getPresenceValue(&amp;presenceVal);\n      Serial.print(\"Presence: \");\n      Serial.print(presenceVal);\n      Serial.println(\"cm^-1\");\n    }\n  }\n}\n</code></pre>"},{"location":"print_view/#hardware-connections_1","title":"Hardware Connections","text":"<p>For this example, users simply need to connect their Qwiic Human Presence/Motion Sensor board to their microcontroller, utilizing the I<sup>2</sup>C interface and interrupt pin. Users can easily connect the I<sup>2</sup>C interface with the Qwiic connection system on their boards. To connect the interrupt pin, we recommend utilizing an IC-hook for a temporary connection.</p> <p></p> <p></p> <p> The Qwiic Human Presence/Motion Sensor boards are connected to a RedBoard Plus, with a Qwiic cable and an IC-hook. </p> Pin Connections <p>For users with a development board without a Qwiic connector, the table below illustrates the required pin connections. Make sure that the logic-level of the sensor is compatible with the development board that is being connected.</p> <p> Sensor Pin Microcontroller Pin RedBoard/Uno <code>INT</code> Interrupt Pin <code>D2</code> <code>SCL</code> I<sup>2</sup>C - Serial Clock <code>SCL</code>/<code>A5</code> <code>SDA</code> I<sup>2</sup>C - Serial Data <code>SDA</code>/<code>A4</code> <code>3V3</code> Power: 1.7 to 3.6V <code>3.3V</code> <code>GND</code> Ground <code>GND</code> <p></p>"},{"location":"print_view/#serial-monitor_1","title":"Serial Monitor","text":"<p>This example waits until an interrupt is triggered by one of the detection modes before the raw IR presence value (cm<sup>-1</sup>) is retrieved from the STHS34PF80 sensor. The data is then displayed in the Serial Monitor.</p> <p></p> <p>The human presence detection values being streamed from the STHS34PF80 sensor into the Serial Monitor.</p> <p>Tip</p> <p>For this example wave different objects in front of the sensor, with varying ranges in and out of the sensor's field of view. Objects that emit black body radiation work the best and should trigger the interrupt.</p>"},{"location":"print_view/#example-spi","title":"Example - SPI","text":"<pre><code>This example doesn't currently operate properly; we are actively looking into the issue. To track our progress, please refer to this [GitHub issue](https://github.com/sparkfun/SparkFun_STHS34PF80_Arduino_Library/issues/7).\n</code></pre>"},{"location":"print_view/#description","title":"Description","text":"<p>The <code>Example4_SPIFunctionality.ino</code> example file can be accessed from the File &gt; Examples &gt; SparkFun STHS34PF80 Arduino Library &gt; Example4_SPIFunctionality drop-down menu. This example operates similarly to the code in <code>Example1_BasicReadings.ino</code>. Instead of retrieving data through the I<sup>2</sup>C interface, the serial peripheral interface (SPI) is used to access the human presence detection values from the STHS34PF80 sensor.</p> <code>Example4_SPIFunctionality.ino</code> Code Verification <p>This code was last verified to be functional under the following parameters:</p> <pre><code>IDE: Arduino 2.2.1\nHardware Platform: SparkFun RedBoard Qwiic  \nSparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\nSparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n</code></pre> <pre><code>/******************************************************************************\n  Example4_SPIFunctionality.ino\n\n  Read human presence detection values from the STHS34PF80 sensor, print them\n  to terminal using SPI communication instead of I2C. \n  Prints raw IR presence (cm^-1), if motion was detected, and temperature \n  in degrees C.\n\n  SparkFun STHS34PF80 Arduino Library\n  Madison Chodikov @ SparkFun Electronics\n  Original Creation Date: September 19th, 2023\n  https://github.com/sparkfun/SparkFun_STHS34PF80_Arduino_Library\n\n  Development environment specifics:\n\n  IDE: Arduino 2.2.1\n  Hardware Platform: SparkFun RedBoard Qwiic    \n  SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic) Version: 1.0\n  SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80 Version: 1.0\n\n  Do you like this library? Help support SparkFun. Buy a board!\n\n    SparkFun Human Presence and Motion Sensor - STHS34PF80 (Qwiic)\n    https://www.sparkfun.com/products/22494\n\n    SparkFun Qwiic Mini Human Presence and Motion Sensor - STHS34PF80\n    https://www.sparkfun.com/products/23253\n\n  Hardware Connections:\n  Wire the SPI Connections from the RedBoard Qwiic to the STHS34PF80 Breakout \n  with a resistive divider using the header pins like so: \n\n  ARDUINO --&gt; STHS34PF80\n  SCK/SCL (13) --&gt; Clock\n  SDI/SDA (12) --&gt; Data in\n  !CS (10) --&gt; Chip Select\n  3.3V --&gt; 3.3V\n  GND --&gt; GND\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n******************************************************************************/\n\n#include \"SparkFun_STHS34PF80_Arduino_Library.h\"\n#include &lt;SPI.h&gt;\n\nSTHS34PF80_SPI mySensor; \n\n// Presence and Motion variables to fill\nint16_t presenceVal = 0;\nfloat temperatureVal = 0;\n\n// Set your chip select pin according to your setup\nuint8_t chipSelect = 10;\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println(\"STHS34PF80 Example 4: SPI Functionality\");\n\n    // Configure the chip select pin\n    pinMode(chipSelect, OUTPUT);\n      digitalWrite(chipSelect, HIGH);\n\n    // Begin SPI\n    SPI.begin();\n\n    // Establish communication with device \n    if(mySensor.begin(chipSelect) == false)\n    {\n      Serial.println(\"Error setting up device - please check wiring.\");\n      while(1);\n    }\n\n    delay(500);\n}\n\nvoid loop() \n{\n  sths34pf80_tmos_drdy_status_t dataReady;\n  mySensor.getDataReady(&amp;dataReady);\n  Serial.println(dataReady.drdy);\n\n  // Check whether sensor has new data - run through loop if data is ready\n  if(dataReady.drdy == 1)\n  {\n    sths34pf80_tmos_func_status_t status;\n    mySensor.getStatus(&amp;status);\n\n    // If presence flag is high, then print data\n    if(status.pres_flag == 1)\n    {\n      // Presence Units: cm^-1\n      mySensor.getPresenceValue(&amp;presenceVal);\n      Serial.print(\"Presence: \");\n      Serial.print(presenceVal);\n      Serial.println(\" cm^-1\");\n    }\n\n    if(status.mot_flag == 1)\n    {\n      Serial.println(\"Motion Detected!\");\n    }\n\n    if(status.tamb_shock_flag == 1)\n    {\n      mySensor.getTemperatureData(&amp;temperatureVal);\n      Serial.print(\"Temperature: \");\n      Serial.print(temperatureVal);\n      Serial.println(\" \u00b0C\");\n    }\n  }\n}\n</code></pre>"},{"location":"print_view/#hardware-connections_2","title":"Hardware Connections","text":"<p>For this example, users will need to modify the <code>CS</code> jumper to enable the SPI communication. In the setups illustrated below, right-angle headers were soldered to the boards and connected with M/F jumper wires to the microcontroller. However, users should select a connection method that suits their needs.</p> <p></p> <p></p> <p> The Qwiic Human Presence/Motion Sensor boards with headers soldered to them and connected to a RedBoard Plus with jumper wires. </p>"},{"location":"print_view/#pin-connections","title":"Pin Connections","text":"<p>Below are the pin connections for SPI communication with the sensor. Users should be aware of the logic-levels of their microcontroller; with the RedBoard Plus, users only need to flip a switch to configure all the board's pins to 3.3V-logic.</p> Sensor Pin Microcontroller Pin RedBoard Plus <code>CS</code> SPI - Chip Select Pin <code>10</code> <code>SCL</code> SPI - Serial Peripheral Clock <code>13</code> <code>SDA</code> SPI - Serial Data In/Out <code>12</code> <code>3V3</code> Power: 1.7 to 3.6V <code>3.3V</code> <code>GND</code> Ground <code>GND</code> <p></p> <p>The logic-level switch on the RedBoard Plus.</p> <p>Note</p> <p>Users will need to initially pull the <code>CS</code> pin low, to enable the SPI communication on the Qwiic Human Presence/Motion Sensor boards.</p>"},{"location":"print_view/#troubleshooting-tips","title":"Troubleshooting Tips","text":"<p>Need Help?</p> <p>If you need technical assistance or more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting.</p> <p> SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, the SparkFun Forums is a great place to search product forums and ask questions.</p> <p>Account Registration Required</p> <p>If this is your first visit to our forum, you'll need to create a Forum Account to post questions.</p>"},{"location":"print_view/#resources","title":"Resources","text":""},{"location":"print_view/#product-resources","title":"Product Resources","text":"<ul> <li> <p>Composite (Both Boards)</p> <ul> <li> Design Files:<ul> <li> Board Dimensions</li> <li> Schematic</li> <li> Eagle Files</li> </ul> </li> <li> Arduino Library</li> <li>Component Documentation<ul> <li> STHS34PF805 Datasheet</li> <li> AN5983 - Hardware Guidelines</li> <li> AN5867 - Operation Manual</li> </ul> </li> <li> Hardware Repo</li> </ul> </li> <li> <p>Human Presence and Motion Sensor - STHS34PF80 (Qwiic)</p> <ul> <li> Product Page</li> <li> Design Files:<ul> <li> Board Dimensions</li> <li> Schematic</li> <li> Eagle Files</li> </ul> </li> </ul> </li> <li> <p>Qwiic Mini Human Presence and Motion Sensor - STHS34PF80</p> <ul> <li> Product Page</li> <li> Design Files:<ul> <li> Board Dimensions</li> <li> Schematic</li> <li> Eagle Files</li> </ul> </li> </ul> </li> </ul>"},{"location":"print_view/#additional-resources","title":"Additional Resources","text":"<ul> <li> SparkFun Technical Assistance</li> </ul>"},{"location":"print_view/#manufacturers-resources","title":"\ud83c\udfed\u00a0Manufacturer's Resources","text":"<p>ST Microelectronics also provides additional resources for the STHS34PF805:</p> <ul> <li>STHS34PF805 Product Page</li> </ul> <p> </p>"},{"location":"resources/","title":"Resources","text":""},{"location":"resources/#product-resources","title":"Product Resources","text":"<ul> <li> <p>Composite (Both Boards)</p> <ul> <li> Design Files:<ul> <li> Board Dimensions</li> <li> Schematic</li> <li> Eagle Files</li> </ul> </li> <li> Arduino Library</li> <li>Component Documentation<ul> <li> STHS34PF805 Datasheet</li> <li> AN5983 - Hardware Guidelines</li> <li> AN5867 - Operation Manual</li> </ul> </li> <li> Hardware Repo</li> </ul> </li> <li> <p>Human Presence and Motion Sensor - STHS34PF80 (Qwiic)</p> <ul> <li> Product Page</li> <li> Design Files:<ul> <li> Board Dimensions</li> <li> Schematic</li> <li> Eagle Files</li> </ul> </li> </ul> </li> <li> <p>Qwiic Mini Human Presence and Motion Sensor - STHS34PF80</p> <ul> <li> Product Page</li> <li> Design Files:<ul> <li> Board Dimensions</li> <li> Schematic</li> <li> Eagle Files</li> </ul> </li> </ul> </li> </ul>"},{"location":"resources/#additional-resources","title":"Additional Resources","text":"<ul> <li> SparkFun Technical Assistance</li> </ul>"},{"location":"resources/#manufacturers-resources","title":"\ud83c\udfed\u00a0Manufacturer's Resources","text":"<p>ST Microelectronics also provides additional resources for the STHS34PF805:</p> <ul> <li>STHS34PF805 Product Page</li> </ul> <p> </p>"},{"location":"software_overview/","title":"Installation and Setup","text":""},{"location":"software_overview/#arduino-ide","title":"Arduino IDE","text":"<p>Tip</p> <p>For first-time users, who have never programmed before and are looking to use the Arduino IDE, we recommend beginning with the SparkFun Inventor's Kit (SIK), which is designed to help users get started programming with the Arduino IDE.</p> <p>Most users may already be familiar with the Arduino IDE and its use. However, for those of you who have never heard the name Arduino before, feel free to check out the Arduino website. To get started with using the Arduino IDE, check out our tutorials below:</p> <ul> <li> <p> <p>What is an Arduino?</p> <li> <p> <p>Installing the Arduino IDE</p> <li> <p> <p>Installing an Arduino Library</p> <li> <p> <p>Installing Board Definitions in the Arduino IDE</p> Need help setting up the RedBoard Plus?"},{"location":"software_overview/#redboard-plus","title":"RedBoard Plus","text":"<p>The following instructions should help users get started with the RedBoard Plus. For more information about the board, please check out our hookup guide below:</p> <p> RedBoard Plus Hookup Guide </p>"},{"location":"software_overview/#ch340-driver","title":"CH340 Driver","text":"<p>Users will need to install the appropriate driver for their computer to recognize the serial-to-UART chip on their board/adapter. Most of the latest operating systems will recognize the CH340C chip on the board and automatically install the required driver.</p> <p>To manually install the CH340 driver on their computer, users can download it from the WCH website. For more information, check out our How to Install CH340 Drivers Tutorial.</p> <p> How to Install CH340 Drivers </p>"},{"location":"software_overview/#selecting-a-board","title":"Selecting a Board","text":"<p>When selecting a board to program in the Arduino IDE, users should select the Arduino Uno from the Tools drop-down menu (_i.e. Tools &gt; Board &gt; Arduino AVR Boards &gt; Arduino Uno).</p> <p> Select the Arduino Uno from the Tools drop-down menu in the Arduino IDE. </p> Arduino IDE 2.x.x - Alternative Method <p>In the newest version of the Arduino IDE 2.<code>x</code>.<code>x</code>, users can also select their board (green) and port (blue) from the <code>Select Board &amp; Port</code> dropdown menu (yellow).</p> <p> Selecting the Arduino Uno and COM5 port from the Select Board &amp; Port drop-down menu in the Arduino IDE (v2.0.3)."},{"location":"software_overview/#sparkfun-sths34pf80-arduino-library","title":"SparkFun STHS34PF80 Arduino Library","text":"<p>The SparkFun STHS34PF80 Arduino library can be installed from the library manager in the Arduino IDE by searching for:</p> <pre><code>SparkFun STHS34PF80 Arduino library\n</code></pre> <p></p> <p>SparkFun STHS34PF80 Arduino library in the library manager of the Arduino IDE.</p> Manually Downloading the Arduino Library <p>For users who would like to manually download and install the library, the <code>*.zip</code> file can be accessed from the GitHub repository or downloaded by clicking the button below.</p> <p>  Download the Arduino Library </p>"},{"location":"troubleshooting_tips/","title":"Troubleshooting Tips","text":"<p>Need Help?</p> <p>If you need technical assistance or more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting.</p> <p> SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, the SparkFun Forums is a great place to search product forums and ask questions.</p> <p>Account Registration Required</p> <p>If this is your first visit to our forum, you'll need to create a Forum Account to post questions.</p>"},{"location":"github/contribute/","title":"Contribute: Make an Augmentation!","text":"<p>Spot an improvement opportunity? Feel free to contribute to our open-source design and documentation. </p>"},{"location":"github/contribute/#improve-our-documentation","title":"Improve our Documentation","text":"<p>All of this documentation can be modified by you! Please help us make it better.</p> <ul> <li>These pages are contained in the <code>docs</code> folder of the SparkFun Qwiic Human Presence/Motion Sensor-STHS34PF80 repository.</li> </ul>"},{"location":"github/contribute/#submit-a-correction","title":"Submit a Correction","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your corrections or improvements to the markdown file.</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ul> <li>Once received, the documentation specialist will automatically be notified.</li> <li>We will review your suggested improvements to make sure they are correct and fit within our documentation standards.</li> </ul> </li> </ol>"},{"location":"github/contribute/#improve-our-hardware-design","title":"Improve our Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun Qwiic Human Presence/Motion Sensor-STHS34PF80 repository.</li> </ul>"},{"location":"github/contribute/#submit-a-design-enhancement","title":"Submit a Design Enhancement","text":"<ol> <li>With a GitHub account, fork this repository.</li> <li>Add your design augmentation(s)</li> <li>File a pull request with your changes, and enjoy making the words worlds world a better place.<ol> <li>Once received, the engineer in charge of the original design will automatically be notified.</li> <li>We will review your suggested improvement(s) to verify that they are within our board design standards and meet our product design requirements.</li> <li> <p>If approved, we will flag these changes for our next board revision. Congrats! \ud83c\udf7b</p> <p>Info</p> <p>Even if your suggestion is accepted, these changes may not be immediately available for purchase. We may have to cycle through our current product inventory first.</p> </li> </ol> </li> </ol>"},{"location":"github/contribute/#contributors","title":"Contributors","text":"<p>Let's provide some recognition to the contributors for this project!</p> <p> </p>"},{"location":"github/file_issue/","title":"Did we make a mistake?","text":"<p>Spot something wrong? Please let us know. </p> <p>Need Help?</p> <p>If you need technical assistance or more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting. This Submit Issues page is not where users should seek assistance.</p> <p> SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, the SparkFun Forums is a great place to search the product forums and ask questions.</p> <p>Account Registration Required</p> <p>For your first visit to our forum, you'll need to create a Forum Account to post questions.</p>"},{"location":"github/file_issue/#discrepancies-in-the-documentation","title":"Discrepancies in the Documentation","text":"<p>All of our documentation can be modified by you! Please help us make it better.</p> <ul> <li>The documentation files for these pages are contained in the <code>docs</code> folder of the SparkFun Qwiic Human Presence/Motion Sensor-STHS34PF80 repository.</li> </ul>"},{"location":"github/file_issue/#spot-something-wrong","title":"\ud83d\udd0d Spot something wrong?","text":"<p>If a section of the documentation is incorrect, please open an issue and let us know.</p>"},{"location":"github/file_issue/#do-you-have-a-suggested-correction","title":"Do you have a suggested correction?","text":"<p>Please, refer to the Contribute page.</p>"},{"location":"github/file_issue/#problems-in-the-hardware-design","title":"Problems in the Hardware Design","text":"<p>All of our designs are open-source! Please help us make it better.</p> <ul> <li>Our board design files are contained in the <code>Hardware</code> folder of the SparkFun Qwiic Human Presence/Motion Sensor-STHS34PF80 repository.</li> </ul>"},{"location":"github/file_issue/#does-something-not-make-sense","title":"Does something not make sense? \ud83e\udd14","text":"<p>If part of the design is confusing, please open an issue and let us know.</p>"},{"location":"github/file_issue/#did-we-forget-to-include-an-important-function-of-the-board","title":"Did we forget to include an important function of the board? \ud83e\udd26","text":"<p>If part of the board's functionality is missing, please open an issue and file a feature request.</p> <p>Design Considerations</p> <p>Please keep in mind that we may intentionally exclude certain functions of the board to meet our product design requirements.</p> <ul> <li>For example, our Qwiic Micro boards are intended to fit on a small board layout and only use I<sup>2</sup>C communication; therefore, we may not have the SPI and interrupt pins available for users.</li> </ul>"},{"location":"github/file_issue/#do-you-wish-to-contribute-directly-to-improving-the-board-design","title":"Do you wish to contribute directly to improving the board design?","text":"<p>Please, refer to the Contribute page.</p>"}]}